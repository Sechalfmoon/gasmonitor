package com.gasmonitor.controller.sys;import com.gasmonitor.entity.User;import com.gasmonitor.pros.Consts;import com.gasmonitor.service.user.UserService;import com.gasmonitor.utils.EncryptUtil;import com.gasmonitor.utils.SessionUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpSession;@Controllerpublic class LoginController {    private Logger log = LoggerFactory.getLogger(LoginController.class);    @Autowired    private UserService userService;    @RequestMapping(value = {"/", "/index"})    public String index() {        //如果是登录状态，返回到index,如果不是登录状态返回到login        return "index";    }    /**     * 修改密码     *     * @return     */    @RequestMapping("updatePassword")    public String updatePassword(HttpSession session) {        log.info("得到的session-user:{}", SessionUtils.getUser(session));        return "updatePassword";    }    @RequestMapping("doUpdatePassword")    public String doUpdatePassword(String oldPassword, String newPassword, HttpSession session) {        //兼容以前的123的情况        User user = SessionUtils.getUser(session);        if (Consts.System.DEFAULT_PASSWORD.equalsIgnoreCase(user.getPassword())) {            if (!oldPassword.equals(user.getPassword())) {                return "redirect:/updatePassword?error=旧密码不正确";            }        } else {            //加密过程在这里体现            if (!EncryptUtil.match(oldPassword, user.getPassword())) {                return "redirect:/updatePassword?error=旧密码不正确";            }        }        //更新用户的密码到数据库，并且刷新缓存        userService.updatePassword(user, newPassword);        return "updatePasswordOk";    }}
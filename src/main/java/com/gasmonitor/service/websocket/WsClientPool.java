package com.gasmonitor.service.websocket;import com.gasmonitor.service.websocket.api.WsClientPoolApi;import com.gasmonitor.vo.MonitorData;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.messaging.simp.SimpMessagingTemplate;import org.springframework.stereotype.Service;import java.util.*;/** * Created by saplmm on 2017/6/13. * websocket 连接池 */@Servicepublic class WsClientPool implements WsClientPoolApi {    private Logger log = LoggerFactory.getLogger(WsClientPool.class);    private static final Map<String, Set<String>> clients = new HashMap<String, Set<String>>();    @Autowired    public SimpMessagingTemplate template;    @Override    public void addClient() {    }    @Override    public void rmClient() {    }    @Override    public void addMonitorStations(String client, String station) {        Set<String> statios = clients.get(client);        if (statios == null) {            statios = new HashSet<String>();            statios.add(station);            clients.put(client, statios);        }        //打印所有的信息        log.info("所有的站点信息:{}", clients);    }    @Override    public void rmMonitorStations() {    }    @Override    public boolean sendMonitorData(MonitorData data) {        for (Iterator<String> iterator = clients.keySet().iterator(); iterator.hasNext(); ) {            String key = iterator.next();            Set<String> stations = clients.get(key);            if (stations.contains(data.getStationId())) {                template.convertAndSendToUser(key, "/queue/notifications", data);                log.info("给用户{}发送data{}...", key, data);            }        }        return true;    }}
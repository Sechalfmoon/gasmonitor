package com.gasmonitor.service.security;import com.gasmonitor.dao.TenantRepository;import com.gasmonitor.dao.UserRepository;import com.gasmonitor.entity.Tenant;import com.gasmonitor.entity.User;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import java.util.ArrayList;import java.util.List;// * Created by saplmm on 2017/6/10.public class CustomUserService implements UserDetailsService {    private Logger log = LoggerFactory.getLogger(CustomUserService.class);    @Autowired    UserRepository userRepository;    @Autowired    TenantRepository tenantRepository;    @Override    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {        //目前使用Tenant        return loadTenantByName(s);    }    public UserDetails loadTenantByName(String s) throws UsernameNotFoundException {        log.info("loadUserByUsername({})", s);        Tenant user = tenantRepository.findByName(s);        log.info("loadUserByUsername({})-->user:{}", s, user);        List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();        authorities.add(new SimpleGrantedAuthority("ROLE_ADMIN"));        return new org.springframework.security.core.userdetails.User(user.getName(), user.getPassword(), authorities);    }    public UserDetails loadUserByName(String s) throws UsernameNotFoundException {        log.info("loadUserByUsername({})", s);        User user = userRepository.findByUsername(s);        log.info("loadUserByUsername({})-->user:{}", s, user);        List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();        authorities.add(new SimpleGrantedAuthority("ROLE_ADMIN"));        return new org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), authorities);    }}
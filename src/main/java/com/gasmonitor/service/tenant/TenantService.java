package com.gasmonitor.service.tenant;import com.gasmonitor.dao.TenantRepository;import com.gasmonitor.dao.UserRepository;import com.gasmonitor.entity.Tenant;import com.gasmonitor.entity.User;import com.gasmonitor.pros.Role;import com.gasmonitor.utils.PageUtils;import com.gasmonitor.vo.AjaxResult;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.Date;import static com.gasmonitor.pros.Status.User.STATUS_DEFAULT;/** * Created by saplmm on 2017/6/23. */@Servicepublic class TenantService {    private Logger log = LoggerFactory.getLogger(TenantService.class);    @Autowired    private TenantRepository tenantRepository;    @Autowired    private UserRepository userRepository;    //查找pageTenatn    public Page<Tenant> findPageTenant(int pageNumber, int pageSize) {        Page<Tenant> sourceCodes = tenantRepository.findAll(PageUtils.p(pageNumber, pageSize));        return sourceCodes;    }    //更新租户的信息    @Transactional    public AjaxResult<Tenant> updateTenant(Tenant newTenant) {        log.info("更新租户的信息:{}", newTenant);        if (newTenant.getId() == null) {            return AjaxResult.ErrorAjaxResult("没有找到记录");        }        Tenant old = tenantRepository.findOne(newTenant.getId());        if (old == null) {            return AjaxResult.ErrorAjaxResult();        } else {            old.setName(newTenant.getName());            old.setMobile(newTenant.getMobile());            old.setAddress(newTenant.getAddress());            old.setCompany(newTenant.getCompany());            old.setUser_upper(newTenant.getUser_upper());            old.setDevice_upper(newTenant.getDevice_upper());            old.setSite_upper(newTenant.getSite_upper());            tenantRepository.save(old);        }        return new AjaxResult(old);    }    /**     * 新增加一个租户     * 1，增加一个租户     * 2，为租户增加一个管理员：自动生成管理员的信息     */    @Transactional    public Tenant newTenant(Tenant t) {        log.info("创建一个租户:{}", t);        //1        t.setCreatedate(new Date());        t = tenantRepository.save(t);        log.info("创建之后的租户:{}", t);        //2        User user = new User();        user.setUsername("tenantadmin" + t.getId());        user.setPassword("123");//todo 暂时处理成密码为123        user.setRole(Role.ROLE_TENANTADMIN);//设置玩家角色        user.setTenantId(t.getId());//关联tenantId        user.setCreatedate(new Date());        user.setStatus(STATUS_DEFAULT);        userRepository.save(user);        return t;    }}